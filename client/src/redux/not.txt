import { loqOut, setToken } from '../features/userSlice';
import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';

const baseQuery = fetchBaseQuery({
  baseUrl: 'http://localhost:3000',
  credentials: 'include',
  headers: {
    'Access-Control-Allow-Origin': 'http://localhost:3008',
    'Access-Control-Allow-Credentials': 'true',
    'Content-Type': 'application/json',
  },
  prepareHeaders: (headers, { getState }) => {
    const token = getState().auth.token;

    console.log('token: ' + token);
    if (token) {
      headers.set('authorization', `Bearer ${token}`);
    }
    return headers;
  },
});

const baseQueryWithReauth = async (args, api, extraOptions) => {
  let result = await baseQuery(args, api, extraOptions);

  if (result?.error?.originalStatus === 401) {
    console.log('sending reflesh token');

    const refreshResult = await baseQuery('/auth/refresh', api, extraOptions);
    console.log('reflesh result: ', refreshResult);

    if (refreshResult?.data) {
      api.dispatch(setToken(refreshResult.data));
      result = baseQuery(args, api, extraOptions);
    } else {
      api.dispatch(loqOut());
    }
  }
};

export const apiSlice = createApi({
  baseQuery: baseQueryWithReauth,
  endpoints: (builder) => ({}),
});


export const authApiSlice = apiSlice.injectEndpoints({
  endpoints: (builder) => ({
    login: builder.mutation({
      query: (credentials) => ({
        url: '/auth/local/login',
        method: 'POST',
        body: { ...credentials },
      }),
    }),
  }),
});

export const { useLoginMutation } = authApiSlice;

const [login, { isSuccess, isError, isLoading }] = useLoginMutation();

 const onSubmitHandler = async (e) => {
    e.preventDefault();

    try {
      const userData = await login({ email, password }).unwrap();
      console.log('gelen user :', userData);

      navigate('/profile');
    } catch (err) {
      console.log('hata var ::', err);
    }
  };

  şeklindeki yapıdan 

  buildThunks.ts:294 TypeError: Cannot read properties of undefined (reading 'error')
    at executeEndpoint (buildThunks.ts:264:1)
    at async createAsyncThunk.ts:345:1

    hatası alıyorum çözümü ne 